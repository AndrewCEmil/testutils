#!/bin/bash
# HEY! 2013 is hardcoded! Keep that in mind, uh so is Zulu time
# as well as all the other random consolidations
sed -E \
	-e 's/.*BackgroundJob.*//' \
	-e 's/\$auth/auth/g' \
	-e 's/warning: log line attempted .* beginning and end ... //g' \
	-e 's/query: {.*}//g' \
	-e 's/: [a-zA-Z]{3} ([a-zA-Z]{3}) [ ]+([0-9]+) /: 2013-\1-\2T/;s/-([0-9])T/-0\1T/' \
	-e 's/Jan/01/g;s/Feb/02/g;s/Mar/03/g;s/Apr/04/g;s/May/05/g;s/Jun/06/g;s/Jul/07/g;s/Aug/08/g;s/Sep/09/g;s/Oct/10/g;s/Nov/1/g;s/Dec/12/g;' \
	-e "s/locks\(micros\) //" \
	-e 's/([0-9]+)ms/\"ms\":\1/' \
	-e 's/^.*mongod.[0-9]+\[([0-9]*)\]: ([^\[]+) \[([ a-zA-Z0-9]+)\]/{ \"pid\":\1, \"ts\":{\"$isodate\":\"\2Z\"}, \"thread\":\"\3\", >>/' \
	-e 's/>> update ([\.a-zA-Z0-9]+) /\"update\":\"\1\", /' \
	-e 's/>> getmore ([\.a-zA-Z0-9]+) /\"getmore\":\"\1\", /' \
	-e 's/>> query ([\.a-zA-Z0-9]+) /\"query\":\"\1\", /' \
	-e 's/\"thread\":\"conn([0-9]+)\", >> end connection ([0-9]+).([0-9]+).([0-9]+).([0-9]+):([0-9]+) \(([0-9]+) connections now open\)/\"thread\":\"conn\1\", \"conn\":\1, \"op\":\"end\", \"ip\":\"\2.\3.\4.\5\", \"port\":\6, \"count\":\7/' \
	-e 's/\"thread\":\"conn([0-9]+)\", >> Socket recv\(\) got ([0-9]+) bytes wanted len=([0-9]+)/\"thread\":\"conn\1\", \"conn\":\1, \"op\":\"error\",  \"msg\":"Socket recv\(\)", \"got\":\2, \"wanted\":\3/' \
	-e 's/\"thread\":\"conn([0-9]+)\", >> Socket recv\(\) errno:([0-9]+).([ a-zA-Z]+) ([0-9]+).([0-9]+).([0-9]+).([0-9]+):([0-9]+)/\"thread\":\"conn\1\", \"conn\":\1, \"op\":\"error\", \"ip\":\"\4.\5.\6.\7\", \"port\":\8, \"error\":\"\2\", \"msg\":\"\3\"/' \
	-e 's/\"thread\":\"conn([0-9]+)\", >> SocketException: remote: ([0-9]+).([0-9]+).([0-9]+).([0-9]+):([0-9]+) error: ([0-9]+) (.*) $/\"thread\":\"conn\1\", \"conn\":\1, \"op\":\"error\", \"ip\":\"\2.\3.\4.\5\", \"port\":\6, \"error\":\7, \"msg\":\"\8\"/' \
	-e 's/>> killcursors: found ([0-9]+) of ([0-9]+)/\"killcursors\":\"1\", \"tot\":\"\2\", \"found\\"":\"\1\" /' \
	-e 's/>> killcursors  /\"killcursors\":\"1\", /' \
	-e 's/>> profile: warning ns ([\.a-zA-Z0-9]+) does not exist/\"profile\":"warning", \"ns\":\"\1\", \"msg\":\"does not exist\"/' \
	-e 's/>>  ([\.a-zA-Z0-9]+) warning assertion failure (.*)$/\"warning\":\"assert", \"ns\":\"\2\", \"msg\":\"\2\"/' \
	-e 's/>> lsn set ([0-9]+)/\"lsnSet\":\1 /' \
	-e 's/>> replSet syncing to: ([-_a-zA-Z0-9]+):([0-9]+) (.*)$/\"replSet\":\"syncTo\", \"server\":\"\1\", \"port\":\2, \"msg\":\"\3\"/' \
	-e 's/>> old journal file will be removed: ([-\/\._a-zA-Z0-9]+)/\"journalFileRemove\":\"\1\" /' \
	-e 's/>> serverStatus was very slow: /\"serverStatus\":"slow",\"stats\": /' \
	-e 's/(after|middle|of|extra|at)[ ]+/\1_/g' \
	-e 's/>> connection accepted from ([0-9]+).([0-9]+).([0-9]+).([0-9]+):([0-9]+) \#([0-9]+) \(([0-9]+) connections now open\)/\"conn\":\6, \"op\":\"accept\", \"ip\":\"\1.\2.\3.\4\", \"port\":\5, \"count\":\7/' \
	-e 's/>> OplogEvent \[([0-9]+)\] Timestamp\(([0-9]+).([0-9])+\) ([-0-9]+) ([a-z]+)/\"OplogEvent\":\{\"id\":\1,\"t\":\2,\"i\":\3,\"c\":\4,\"status\":\"\5\"\},/' \
	-e 's/>> replication batch size is ([0-9]+)/\"replication\":\"rbs\", \"size\":\1,/' \
	-e 's/>> replication apply ops took /\"replication\":\"rao\", /' \
	-e 's/>> Set local.replset.minvalid took: ([0-9]+) micros/\"locRepMinValid\":\"\1\",/' \
	-e 's/>> replSet last: ([a-f0-9]+):([a-f0-9]+) to ([a-f0-9]+):([a-f0-9]+)/\"replSetLast\":{\"set\":\"\1\", \"b\":\"\2\", \"e\":\"\4\"} /' \
	-e 's/>> info ([\(\):a-zA-Z0-9]+) (.*)\. /\"info\":\"\1\", \"msg\":\"\2\", /' \
	-e 's/>> command ([a-zA-Z0-9]+)..cmd command: (.*)/\"cmd\":"ret", \"db\":\"\1\", \"command\":\2 /' \
	-e 's/>> run command ([a-zA-Z0-9]+)\..cmd (.*)/\"cmd\":"run", \"db\":\"\1\", \"command\":\2/' \
	-e 's:>> flushing directory ([-_\./a-zA-Z0-9]+):\"io\"\:\"flush\", \"type\"\:\"directory\", \"name\"\:\"\1\" :' \
	-e 's/>> flushing mmaps took (\"ms\":[0-9]+). for ([0-9]+) files/\"io\":\"flush\", \"type\":\"memmaps\", \1, \"files\":\2/' \
	-e 's/>>[ ]*(running multiple plans)/\"opNote\":"\1"/' \
	-e 's/>> (commitIfNeeded.*)/\"opNote\":"\1"/' \
	-e 's/>> (.*)  /\"opNote\":"\1", /' \
	-e 's/([_a-zA-Z]+):[ ]*([0-9]+) /\"\1\":\2,/g' \
	-e 's/{[ ]*([_a-zA-Z]+):[ ]*([0-9]+)}/{ \"\1\":\2 }/g' \
	-e 's/{[ ]*([_a-zA-Z]+):[ ]*([0-9]+)[ ]*\}/{ \"\1\":\2 }/g' \
	-e 's/[ ]+([_a-zA-Z]+):/ \"\1\":/g' \
	-e 's/:[ ]*([a-zA-Z]+),/:\"\1\", /g' \
	-e 's/ns:([^\" ]+)/\"ns\":\"\1\"/' \
	-e 's/\"ns\":([^\" ]+)/\"ns\":\"\1\"/' \
	-e 's/ns:\"/\"ns\":\"/' \
	-e 's/,[ ]*}/}/g' \
	-e 's/,$//g' \
	-e 's/}[ ]*\"/}, \"/g' \
	-e 's/$/}/g' \
	-e '/^}$/d' 
exit
